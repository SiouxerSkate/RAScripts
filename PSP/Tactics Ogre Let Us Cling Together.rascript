// Tactics Ogre: Let Us Cling Together
// #ID = 3726

LocationLookup = {
    0x01: "Palace of the Dead",
    0x02: "Bortegun Fens",
    0x03: "Belmorose Highwilds",
    0x04: "Madura Drift",
    0x05: "Brigantys Castle",
    0x06: "Ndamsa Fortress",
    0x07: "Hagia Banhamuba",
    0x08: "Mount Hedon",
    0x09: "Port Asyton",
    0x0A: "Bahanna Highlands",
    0x0B: "Coritanae Castle",
    0x0C: "Xeod Moors",
    0x0D: "Balmamusa",
    0x0E: "Lambiss Hill",
    0x0F: "Phidoch Castle",
    0x10: "Mount Weobry",
    0x11: "Psonji Weald",
    0x12: "Lake Bordu",
    0x13: "Tynemouth Hill",
    0x14: "Kysaro",
    0x15: "Qadriga Fortress",
    0x16: "Iorumza Canyon",
    0x17: "The Arkhaiopolis of Rhime",
    0x18: "Golborza Plain",
    0x19: "Almorica Castle",
    0x1A: "Golyat",
    0x1B: "Geyld Fortress",
    0x1C: "Barnicia Castle",
    0x1D: "Boulder Sands",
    0x1E: "Oeram",
    0x1F: "The Royal City Of Heim",
    0x20: "Boed Fortress",
    0x21: "The Hanging Gardens",
    0x22: "Neimrahava Wood",
    0x23: "Grimsby",
    0x24: "Gecho Fortress",
    0x2A: "Vasque",
    0x2B: "Lhazan Fortress",
    0x25: "Phorampa Wildwood",
    0x26: "Port Omish",
    0x27: "The Pirate's Graveyard",
    0x28: "Rhea Boum Aqueduct",
    0x29: "The Riesan Way",
    0x2c: "San Brosa Ruins",
    0x2e: "The Vanessan Way",
    0x30: "Tzorious Field",
    0x31: "The Leupha Coast",
}

TitleLookup = {
    0x00: "Boy Of No Title",
    0x01: "Hero of Golyat",
    0x02: "Corpse Dancer",
    0x03: "Freedom Fighter",
    0x04: "Peace Seeker",
    0x05: "He Who Fights Alone",
    0x06: "The Impasive",
    0x07: "Butcher Of Golyat",
    0x08: "Fallen Hero",
    0x09: "The Merciful",
    0x0A: "The Unfaithful",
    0x0B: "Man of Proven Worth",
    0x0C: "Helpful Spirit",
    0x0D: "The Selfish",
    0x0E: "Man Among Friends",
    0x0F: "The Unhearing",
    0x10: "Man of Principles",
    0x11: "The Hero Returned",
    0x12: "Piratebane",
    0x13: "Hand Of Justice",
    0x14: "He Who Shuns Duty",
    0x15: "Man of Resolve",
    0x16: "Leader Of Men",
    0x17: "Dark Knight Slayer",
    0x18: "Savior of the Dead",
    0x19: "Freer of Souls",
    0x1A: "Slayer of the Dying",
    0x1B: "Miracle Worker",
    0x1C: "Defender of Almorica",
    0x1D: "Man of Deeds",
    0x1E: "Untarnished Hero",
    0x1F: "The Unflinching",
    0x20: "Arbiter of the Game",
    0x21: "He of Open Eyes",
    0x22: "Dark Knight Scourge",
    0x23: "Man of the Sword",
    0x24: "Man of No Illusions",
    0x25: "The Conqueror",
    0x26: "Destroyer of Galgastan",
    0x27: "He Who Walks in Darkness",
    0x28: "Southron Liberator",
    0x29: "Blood-stained Hero",
    0x2A: "Man of Peace",
    0x2B: "Princess Slayer",
    0x2C: "Tragic Hero",
    0x2D: "Princess Savior",
    0x2E: "Bringer of Peace",
    0x2F: "Bringer of Strife",
    0x30: "Bringer of Order",
    0x31: "Ruler of Valeria",
    0x32: "Grave Robber",
    0x33: "He Who Treads Holy Ground",
    0x34: "He Who Walks the Deeps",
    0x35: "Necromancer Scourge",
    0x36: "Dynast-King Slayer",
    0x37: "Dark Warlord Slayer",
    0x38: "One-eyed Knight Slayer",
    0x39: "He Who is NULL",
    0x3A: "He Who is NULL",
    0x3B: "He Who is NULL",
    0x3C: "He Who is NULL",
    0x3D: "He Who is NULL",
    0x3E: "He Who is NULL",
    0x3F: "He Who is NULL",
    0x40: "He Who is NULL",
    0x41: "Slayer of One",
    0x42: "Slayer of Two",
    0x43: "Slayer of Three",
    0x44: "Slayer of Four",
    0x45: "Slayer of Five",
    0x46: "Slayer of Six",
    0x47: "Slayer of Seven",
    0x48: "Slayer of Eight",
    0x49: "Slayer of Nine",
    0x4A: "Slayer of Ten",
    0x4B: "Slayer of Eleven",
    0x4C: "Slayer of Twelve",
    0x4D: "Seal Breaker",
    0x4E: "Slayer of the Necromancer Lord",
    0x4F: "Slayer of the Sea Witch",
    0x50: "Slayer of the Wind Witch",
    0x51: "Slayer of the Earth Witch",
    0x52: "Slayer of the Lightning Witch",
    0x53: "Slayer of the Water Witch",
    0x54: "Slayer of the Fire Witch",
    0x55: "Slayer of the Ice Witch",
    0x56: "The Tragic King",
    0x57: "The Bloodbound",
    0x58: "Savior of Valeria",
    0x59: "Captain of Fate",
    0x5A: "Concord King",
    0x5B: "The Just",
    0x5C: "Light Unto the Dark",
    0x5D: "Man of No Regrets",
    0x5E: "He Who Stops the Wheel",
    0x5F: "Hero Among Men",
    0x60: "Gifted Warrior",
    0x61: "Lord of the Battlefield",
    0x62: "Master of Tactics",
    0x63: "Concord King Unbloodied",
    0x64: "Hero King Unscathed",
    0x65: "He Who is NULL",
    0x66: "He Who CRASHED THE GAME",
}

MonthLookup = {
    0x00: "Godscale",
    0x01: "Earthscale",
    0x02: "Waterscale",
    0x03: "Shadowscale",
    0x04: "Whitescale",
    0x05: "Flamescale",
    0x06: "Windscale",
    0x07: "Goldscale",
    0x08: "Stormscale",
    0x09: "Darkscale",
    0x0A: "Seascale",
    0x0B: "Blackscale",
    0x0C: "Twinscale",
    0x0D: "Firescale",
    0x0E: "Lightscale",
}

rich_presence_conditional_display(byte(0xAFD956) == 0, "At Title Screen")

rich_presence_display("Denam, '{0}', is fighting for Valeria at {1}, {2} days into the fray...Day {3} of  {4}",
    rich_presence_lookup("Title", byte(0xB10FB8), TitleLookup),
    rich_presence_lookup("Location", byte(0xAFD956), LocationLookup),
    rich_presence_value("Number", dword(0xB10DB0)),
    rich_presence_value("Number", byte(0xB10D6F) + 1),
    rich_presence_lookup("Month", byte(0xB10D6E), MonthLookup)
)

//////////FUNCTION DEFINITION//////////
function Location() => word(0xafd956)
function SecondaryLocation() => word(0x00acb784)
function Title() => byte(0x00b10fb8)
function DeltaTitle() => prev(Title())
function AlliesIncapacitated() => word(0x00b10d84)
function AlliesSlain() => word(0x00b10d88)
function ChariotUsed() => word(0x00b10d7c) == word(0x00b10d80) == word(0x00b10d78)
function ObtainItem(mem) => prev(byte(mem)) == 0 && byte(mem) == 1
function RightHand() => word(0x00ad84f8)
function LeftHand() => word(0x00ad84fa)
function FirstArmor() => word(0x00ad84fc)
function SecondArmor() => word(0x00ad84fe)
function NoChariot() => dword(0x00b10d7c) == dword(0x00b10d80)
function NoAlliesIncaped() => dword(0x00b10d84) == 0x00
function NoAlliesSlain() => dword(0x00b10d88) == 0x00
function InBattle() => prev(byte(0xd40050)) == 1
function NotInBattle() => prev(byte(0xd40050)) == 0
//////////CHEEVO DEFINITION//////////

/////////TITLE CHEEVOS///////////////
///Story Title Dict - To be used for cheevos for titles which are earned via story decisions that offer just a single title. (Not the end game ones)
////key = Name of Title which will be name of cheevo
////value = [cheevo points, location hex value, Title hex values[list], Cheevo Description]
SingleTitleDict = {
    "Hero of Golyat":                 [01, 0x19, 0x01, "Rescued Duke Ronway from imprisonment in Almorica Castle."],
    "Corpse Dancer":                  [05, 0x15, 0x02, "Confronted the Necromancer Nybeth at Qadriga Fortress and put an end to his dark experiments."],
    "The Merciful":                   [05, 0x0C, 0x09, "Came to Arycelle's aid on the Xeod Moors, even though she had once sought to take your life."],
    "Piratesbane":                    [05, 0x15, 0x12, "Saved Xapan the Mercenary from pirates at Qadriga Fortress."],
    "Hand of Justice":                [10, 0x13, 0x13, "Defeated Galgastani High Commander Gatialo at Tynemouth Hill."],
    "Leader of Men":                  [10, 0x19, 0x16, "Struck down Sir Leonar after he slew Duke Ronwey, becoming the leader of the Resistance."],
    "Man of Deeds":                   [05, 0x0B, 0x1D, "Recaptured Coritanae Keep from the remnants of the Galgastani army to prevent the suffering of innocents."],
    "Untarnished Hero":               [05, 0x05, 0x1E, "Defeated Sir Xaebos, commander of the remnants of the Galgastani army, at Brigantys."],
    "The Unflinching":                [10, 0x0A, 0x1F, "Saved the blind swordsman Hobyrim from the Resistance on the Bahanna Highlands."],
    "Arbiter of the Game":            [05, 0x0B, 0x20, "Slew Sir Leonar at Coritanae Keep and learned of Duke Ronwey's plot."],
    "He of Open Eyes":                [05, 0x0B, 0x21, "Slew Sir Leonar in a duel at Coritanae Keep and learned of Duke Ronwey's plot."],
    "Dark Knight Scourge":            [10, 0x20, 0x22, "Defeated Oz at Boed Fortress and put the Dark Knights to rout."],
    "Dark Knight Slayer":             [25, 0x020, 0x17, "Slew the Dark Knight Oz at Boed Fortress and rescued Cerya."],
    "Southron Liberator(C)":          [10, 0x0F, 0x28, "Drove the Dark Knights from Phidoch castle and wrested control of the south of Valeria."],
    "Savior of the Dead":             [05, 0x09, 0x18, "Saved Sir Dievold and Oelias from a horde of undead at Port Asyton."],
    "Freer of Souls":                 [05, 0x06, 0x19, "Defeated the Necromancer Nybeth at Ndamsa Fortress and freed the soul of Sir Gildas."],
    "Slayer of the Dying":            [05, 0x0B, 0x1A, "Defeated Sir Xaebos, commander of the Galgastani army remnants, at Coritanae Keep."],
    "Miracle Worker":                 [05, 0x15, 0x1B, "Rescued Sir Leonar from Imprisonment in Qadriga Fortress."],
    "Defender of Almorica":           [10, 0x1A, 0x1C, "Drove the remnants of the Galgastani army out of hiding in Golyat."],
    "Southron Liberator(N)":          [10, 0x0F, 0x28, "Drove the Dark Knights from Phidoch castle and wrested control of the south of Valeria."],
    "The Conqueror":                  [05, 0x0B, 0x25, "Took Coritanae Keep and brought Hierophant Balbatos to justice."],
    "Destroyer or Galgastan":         [05, 0x19, 0x26, "Defeated Sir Xaebos, commander of the Galgastani army remnants, at Almorica Castle."],
    "He Who Walks In Darkness":       [10, 0x17, 0x27, "Defeated the Bakram forces under the command of Dark Knight Ozma and rescued the blind swordsman Hobyrim at the Arkhaiopolis of Rhime."],
    "Southron Liberator(L)":          [10, 0x0F, 0x28, "Drove the Dark Knights from Phidoch castle and wrested control of the south of Valeria."],
    "Blood-stained Hero":             [05, 0x05, 0x29, "Journeyed to Brigantys Castle to parley with the Order of Philaha, but you were unable to avoid bloodshed."],
    "Man of Peace":                   [05, 0x05, 0x2A, "Journeyed to Brigantys Castle, alone and unarmed, to parley with the Order of Philaha."],
    "Ruler of Valeria":               [05, 0x0F, 0x31, "Allowed Catiua to die before the final battle at the Royal City of Heim."],
    "Dynast-King Slayer":             [50, 0x21, 0x36, "Defeat Dorgalua, the Dynast-King, as he returned from the Abyss."],
    "The Tragic King":                [10, 0x21, 0x56, "Finish the main campaign with the 'Bad/Assassin Ending'."],
    "The Bloodbound":                 [10, 0x21, 0x57, "Finish the main campaign with the 'Neutral Ending'."],
    "Savior of Valeria":              [10, 0x21, 0x58, "Finish the main campaign with the 'Good Ending'."],
    "Hero King Unscathed[m]":         [50, 0x1F, 0x64, "Complete main campaign without any units falling(no HP to 0)."],
    "Slayer of the Wind Watch":       [10, 0x06, 0x50, "Defeated the Guardian Vainateya and Complete the Wind Sanctum."],
    "Slayer of the Earth Watch":      [10, 0x24, 0x51, "Defeated the Guardian Nathalork and Complete the Earth Sanctum."],
    "Slayer of the Lightning Watch":  [10, 0x15, 0x52, "Defeated the Guardian Xolotl and Complete the Lightning Sanctum."],
    "Slayer of the Water Watch":      [10, 0x1B, 0x53, "Defeated the Guardian Tlaloc and Complete the Water Sanctum."],
    "Slayer of the Fire Watch":       [10, 0x20, 0x54, "Defeated the Guardian Ifrit and Complete the Fire Sanctum."],
    "Slayer of the Ice Watch":        [10, 0x2B, 0x55, "Defeated the Guardian Lygenstzel and Complete the Ice Sanctum."],
    "He Who Walks the Deeps":         [05, 0x01, 0x34, "Discovered the secret door on the third level of the palace of the dead, allowing access to the depths below."],
    "Necromancer Scourge":            [50, 0x01, 0x35, "Defeated the Necromancer Nybeth who had embraced death and become a lich."],
    "Slayer of the Necromancer Lord": [50, 0x01, 0x4E, "Defeated Blackmoor, the necromancer lord."],
    "Slayer of One":                  [10, 0x01, 0x41, "Defeated Vija, one of the Twelve Heavenly Generals"],
    "Slayer of Two":                  [10, 0x27, 0x42, "Defeated Enja, one of the Twelve Heavenly Generals"],
    "Slayer of Three":                [10, 0x25, 0x43, "Defeated Maitreya, one of the Twelve Heavenly Generals"],
    "Slayer of Four":                 [10, 0x01, 0x44, "Defeated Ijana, one of the Twelve Heavenly Generals"],
    "Slayer of Five":                 [10, 0x01, 0x45, "Defeated Chandra, one of the Twelve Heavenly Generals"],
    "Slayer of Six":                  [10, 0x2c, 0x46, "Defeated Vayu, one of the Twelve Heavenly Generals"],
    "Slayer of Seven":                [10, 0x25, 0x47, "Defeated Indra, one of the Twelve Heavenly Generals"],
    "Slayer of Eight":                [10, 0x2c, 0x48, "Defeated Rakshas, one of the Twelve Heavenly Generals"],
    "Slayer of Nine":                 [10, 0x01, 0x49, "Defeated Ahurama, one of the Twelve Heavenly Generals"],
    "Slayer of Ten":                  [10, 0x01, 0x4A, "Defeated Asurama, one of the Twelve Heavenly Generals"],
    "Slayer of Eleven":               [10, 0x2c, 0x4B, "Defeated Aditi, one of the Twelve Heavenly Generals"],
    "Slayer of Twelve":               [10, 0x2c, 0x4C, "Defeated Saranga, one of the Twelve Heavenly Generals"],
    "The Just[m]":                    [100, 0x01, 0x5B, "Reached the Altar of the Beyond in the Palace of the Dead without using Chariot Tarot or Retreating"],
    "Slayer of the Sea Witch":        [10, 0x27, 0x4F, "Defeated Sirene, releasing Iuria from her spell"],
    "Seal Breaker":                   [10, 0x01, 0x4D, "Defeated Kandyce, keeper of the Seal."],
    "Dark Warlord Slayer":            [25, 0x01, 0x37, "Defeated the Warlord Rodrick, a fallen king consumed by the Dark"],
    "Light Unto the Dark[m]":         [25, 0x01, 0x5C, "Reached and completed the Chamber of the Seal in the Palace of the Dead without using the Chariot Tarot or retreating"],
    "He Who Stops the Wheel[m]":      [100, 0x1A, 0x5e, "Completed all Coda Episodes without using Chariot Tarot or Retreating"],
    "One-eyed Knight Slayer":         [50, 0x1A, 0x38, "Defeated Sir Tartaros, High Champion of the Dark Knights of Lodis"],
    "Man of No Regrets[m]":           [25, 0x2C, 0x5D, "Reached and completed the Central Garden in the floating ruins of San Bronsa without using the Chariot Tarot or retreating"],
}

function StoryTitleCheevos()
{
    for key in SingleTitleDict
    {
        value_list = SingleTitleDict[key]
        trigger = Location() == value_list[1] && DeltaTitle() != 0 && DeltaTitle() != value_list[2] && Title() == value_list[2]
        achievement(title=key, description=value_list[3], points=value_list[0], trigger=trigger)
    }
}

StoryTitleCheevos()

/////Title Cheevos that have multiple titles in one. I.E. story titles that the only difference is making a decision. 


MultiTitleDict = {
    "Freedom Of Choice":                     [05, 0x17, [0x03, 0x04, 0x05, 0x06], "Choose the fate of Cistina at Arkhaiopolis of Rhime."],
    "There is Blood On My Hands":            [05, 0x0D, [0x07, 0x08], "Complete Chapter 1."],
    "Old Friends Quarrel":                   [05, 0x13, [0x0A, 0x0B], "Defeat Vyce at Tynemouth and choose Arycelle's fate."],
    "Liberation Front?":                     [05, 0x15, [0x0C, 0x0D], "Choose if you want to help the Liberation Front."],
    "Revolutionary":                         [05, 0x20, [0x0E, 0x0F], "Make a descion about befriending the Liberation Front."],
    "The World Can Be Put To Rights":        [10, 0x19, [0x10, 0x11], "Complete Ch2 on the Chaos Route."],
    "A Ronwey Descision":                    [05, 0x17, [0x14, 0x15], "Heard out Sir Leonar's plot and made your desicion about the future of the Resistance."],
    "Man of Action":                         [05, 0x05, [0x23, 0x24], "Complete the battle at Briganty's Great Hall and make a choice about the people of Galgastan."],
    "A Sister's Fate":                       [10, 0x1C, [0x2B, 0x2C, 0x2D], "Compelte the battles at Barnicia Castle and choose Catiua's fate."],
    "Bringer Of Change":                     [10, 0x1F, [0x2E, 0x2F, 0x30], "Defeat Brantyn at the Royal City Of Heim and decide the future of Valeria."],
    "He Who Visited the Pirate's Graveyard": [10, 0x27, [0x32, 0x33], "Decide what to do with the treasure of the Pirate's Graveyard."],
    "Concord King Unbloodied[m]":            [25, 0x1F, [0x63, 0x64], "Complete main without any units dying(No Death Counter to 0)."],
}

function ProcessTitleList(value_list)
{
    trigger = always_false()
    for i in value_list
    {
        trigger = trigger || (DeltaTitle() != i && Title() == i)
    }
    return trigger
}

function MultiTitleCheevos()
{
    for key in MultiTitleDict
    {
        value_list = MultiTitleDict[key]
        achievement(title=key, description=value_list[3], points=value_list[0], trigger=Location() == value_list[1] && DeltaTitle() != 0 && ProcessTitleList(value_list[2]))
    }
}

MultiTitleCheevos()


///No Chariot/Deaths/Incap Cheevos for CH1, CH2, Ch3, Ch4
ExtraChapterList = ["No Chariot", "No Dying", "No HP 0"]

//Dict Key=Chapter value=[points, Location Value, [of possible titles for completing ch], Init Title]
NoXXXDict = {
    "Chapter 1": [01, 0x0D, [0x07, 0x08], " Warrior"],
    "Chapter 2": [05, 0x19, [0x10, 0x11, 0x16], " Knight"],
    "Chapter 3": [05, 0x0F, [0x22, 0x28], " Lord"],
    "Chapter 4": [10, 0x21, [0x36], " King"],
}

function ExtraChapterCheevos(){
    for i in ExtraChapterList
    {
        if i == "No Chariot"
        {
            description = " without using Chariot Tarot or retreating(any route)."
            init_trigger = NoChariot()
            start_title = "Concord"
            end_title = ""
        }
        else if i == "No Dying"
        {
            description = " without any units being incapacitated(any route)."
            init_trigger = NoAlliesIncaped()
            start_title = "Concord"
            end_title = " Unbloodied"
        }
        else if i == "No HP 0"
        {
            description = " without any units being slain(No HP to 0)(any route)."
            init_trigger = NoAlliesSlain()
            start_title = "Hero"
            end_title = " Unscathed"
        }
        process = 1
        for key in NoXXXDict
        {
            if key == "Chapter 4" && i != "No Chariot"
            {
                process = 0
            }
            if process == 1
            {
                value_list = NoXXXDict[key]
                achievement(title=start_title + value_list[3] + end_title + "[m]", 
                            description="Complete " + key + description, points=value_list[0], 
                            trigger=Location() == value_list[1] && DeltaTitle() != 0 && init_trigger && ProcessTitleList(value_list[2])
                            )
            }

        }
    }
}

ExtraChapterCheevos()

///For Chapter things like no chariot and no deaths
//"There is Blood On My Hands":            [05, 0x0D, [0x07, 0x08], "Complete Chapter 1."], - 1

/// "Leader of Men":                       [10, 0x19, 0x16, "Struck down Sir Leonar after he slew Duke Ronwey, becoming the leader of the Resistance."], - 2L
/// "The World Can Be Put To Rights":      [10, 0x19, [0x10, 0x11], "Complete Ch2 on the Chaos Route."], - 2C

///"Southron Liberator(N)":                [10, 0x0F, 0x28, "Drove the Dark Knights from Phidoch castle and wrested control of the south of Valeria."], - 3N
///"Southron Liberator(L)":                [10, 0x0F, 0x28, "Drove the Dark Knights from Phidoch castle and wrested control of the south of Valeria."], - 3L
///"Dark Knight Scourge":                  [10, 0x0F, 0x22, "Defeated Oz at Boed Fortress and put the Dark Knights to rout."], - 3C

///"Dynast-King Slayer":                   [50, 0x21, 0x36, "Defeat Dorgalua, the Dynast-King, as he returned from the Abyss."], - 4



//////CHARACTER RECRUITMENT CHEEVOS///////
///Character Dict - To be used for cheevos for recruiting certain chars. Specifically ones that dont have a title associated with it 
////key = Name of Character
////value = [cheevo points, location hex value, character hex value, Cheevo Title]

CharDict = {
    "Canopus":  [01, 0x13, 0x06, "The Windcaller", ""],
    "Donalto":  [01, 0x14, 0x10, "The Abuna", ""],
    "Xapan":    [01, 0x15, 0x17, "The Mercenary", ""],
    "Arcyelle": [01, 0x19, 0x13, "The Thunder Maiden", ""], //Needs multiple map IDS? Also need 0x13 Its in the local but need to figure out ornext here
    "Cistina":  [05, 0x20, 0x0B, "The Warrior", ""],
    "Jeunan":   [01, 0x05, 0x15, "The Wyrmknight", ""],
    "Ravness":  [05, 0x0a, 0x21, "Dame Loxaerion", ""],
    "Vyce":     [01, 0x19, 0x02, "Friends Reunited", ""],
    "Hobyrim":  [05, 0x0A, 0x14, "Songs Of Steel", ""],   // Needs multiple Map IDS 0x15, 0x17, 
    "Chamus":   [01, 0x15, 0x88, "The Spellbinder", ""],
    "Dievold":  [01, 0x09, 0x18, "The Necroson", ""],
    "Oelias":   [01, 0x09, 0x18, "The Necrodaughter", ""],
    "Mirdyn":   [01, 0x19, 0x07, "Sir Walhorn", ""],
    "Guildas":  [01, 0x19, 0x08, "Sir Byrne", ""],
    "Cerya":    [10, 0x20, 0x09, "The Warrior Sister", ""],
    "Olivya":   [01, 0x05, 0x0C, "The Sibyl", ""],
    "Cressida": [05, 0x1A, 0x1D, "The Necroprentice", ""],
    "Sherri":   [01, 0x0D, 0x0A, "The Magus Phoraena", ""],
    "Ozma":     [05, 0x14, 0x1E, "The Dark Knight Commander", ""],
    "Azelstan": [05, 0x27, 0x22, "The Dread Pirate", ""],  
    "Catiua":   [05, 0x0f, 0x03, "The Princess", ""],
    "Lindl":    [05, 0x23, 0x1F, "The Fusilier", ""],
    "Ocionne":  [05, 0x2b, 0x16, "The Wyrmcaller", ""],
    "Ganpp":    [05, 0x22, 0x1B, "The Beastmaster", ""],
    "Rudlum":   [01, 0x01, 0x1A, "The Magus", ""],
    "Iuria":    [05, 0x27, 0x1C, "The Songstress", ""],
    "Warren":   [05, 0x1f, 0x05, "The Star Seer", ""],
    "Lanselot": [05, 0x1f, 0x04, "The Holy Knight", ""],
    "Deneb":    [50, 0x2A, 0x0D, "The Wicce", " as the Wicce class"],
}

function ProcessRecruits(char_val)
{
    trigger = always_false()
    mem_base = 0x00d40130
    alliegance_offset = 0x52
    class_offset = 0x49
    char_offset = 0x48C
    for i in range(0, 48)
    {
        mem_char = mem_base + (char_offset * i)
        if char_val == 0x22
        {
            trigger = trigger || (byte(mem_char) == char_val && byte(mem_char + alliegance_offset) == 0x13 && prev(byte(mem_char + alliegance_offset)) != 0x13)
        }
        else if char_val == 0x0D
        {
            trigger = trigger || (prev(byte(mem_char)) != char_val && byte(mem_char) == char_val && byte(mem_char + alliegance_offset) == 0x13 && byte(mem_char + class_offset) == 0x3D)
        }
        else
        {
            trigger = trigger || (prev(byte(mem_char)) != char_val && byte(mem_char) == char_val && byte(mem_char + alliegance_offset) == 0x13)
        }
    }
    return trigger
}


function RecruitCheevos()
{
    for key in CharDict
    {
        value_list = CharDict[key]
        achievement(title=value_list[3], description="Recruit " + key + value_list[4] + ".", points=value_list[0], trigger=prev(Location()) == value_list[1] && ProcessRecruits(value_list[2]))
    }
}

RecruitCheevos()




//     Need more complexity for denebs for different map ids and class check
//    
///Random story battle cheevos with no title. Mostly postgame in dungeouns
////key = Name of Character
////value = [cheevo points, location hex value, secondary location, enemy id number, memory for level change, highest numebr of allies, Cheevo Title, Cheevo description]

DungeonLevelDict = {
    "Nybeth":       [05, 0x01, 0x06, 0x3D, high4(0xAFD8CE), 10, "A Pleasure, To Be Sure!", "Defeat Nybeth at Level 5 of the Palace of the Dead."],
    "Georges":      [05, 0x01, 0x018, 0x8e, low4(0x00afd8d7), 10, "Bodies Are Fleshy, Weak Things...A Nuisance", "Defeat Georges at Level 22 of the Palace of the Dead."],
    "Belzebuth":    [05, 0x01, 0x08, 0x72, low4(0x00afd8d4), 10, "Dragon Lord?", "Defeat Belzebuth at Level 41 of the Palace of the Dead."],
    "Belzebuth II": [10, 0x01, 0x019, 0x72, low4(0x00afd8d8), 10, "Unquenchable Desire", "Defeat Belzebuth at Level 74 of the Palace of the Dead."],
    "Vepahl":       [05, 0x2c, 0x04, 0x4b, high4(0x00afd8cd), 12, "Power of the Divine", "Defeat Vepahl at Level 3 of San Brosa."],
}

function ProcessDungeon(value_list)
{
    trigger = always_false()
    enemy_id = value_list[3]
    allies_num = value_list[5]
    mem_base = 0x00d40650
    char_offset = 0x520
    for i in range(0, allies_num - 1)
    {
        mem_char = mem_base + (char_offset * i)
        trigger = trigger || (byte(0x00ad5c92) == (i + 1) && byte(mem_char) == enemy_id)
    } 
    return trigger
}

function DungeonLevelCheevos()
{
    for key in DungeonLevelDict
    {
        value_list = DungeonLevelDict[key]
        achievement(title=value_list[6], description=value_list[7], points=value_list[0], 
        trigger=Location() == value_list[1] && SecondaryLocation() == value_list[2] && prev(value_list[4]) == 1 && value_list[4] == 2 && ProcessDungeon(value_list))
    }
}

DungeonLevelCheevos()

///Cheevos for completing all battles in certain parts of extra dungeons
////key = Name of Dungeoun
////value = [cheevo points, location hex value, value of all upper and lower added up for levels, Cheevo Title]

AllBattleInDungeonDict = {
    "San Brosa Ruins":           [25, 0x2C, 60, "Garden Of Incredible Power", ""],
    "Phorampa Wildwood":         [10, 0x25, 32, "Phorampa Open to Hunting", ""],
    "Pirate's Graveyard":        [05, 0x27, 26, "He Who Devoured the Depths", ""],
    "Palace of the Dead 76-100": [25, 0x01, 52, "In Love With the Dead", "(last battle at Altar Of Beyond)"]
}

function ProcessDungeonAdd(number_of_battle)
{
    trigger = (prev(low4(0x00afd8cc)) + prev(high4(0x00afd8cc)) + prev(low4(0x00afd8cd)) + prev(high4(0x00afd8cd)) +
               prev(low4(0x00afd8ce)) + prev(high4(0x00afd8ce)) + prev(low4(0x00afd8cf)) + prev(high4(0x00afd8cf)) +
               prev(low4(0x00afd8d0)) + prev(high4(0x00afd8d0)) + prev(low4(0x00afd8d1)) + prev(high4(0x00afd8d1)) +
               prev(low4(0x00afd8d2)) + prev(high4(0x00afd8d2)) + prev(low4(0x00afd8d3)) + prev(high4(0x00afd8d3)) +
               prev(low4(0x00afd8d4)) + prev(high4(0x00afd8d4)) + prev(low4(0x00afd8d5)) + prev(high4(0x00afd8d5)) +
               prev(low4(0x00afd8d6)) + prev(high4(0x00afd8d6)) + prev(low4(0x00afd8d7)) + prev(high4(0x00afd8d7)) +
               prev(low4(0x00afd8d8)) + prev(high4(0x00afd8d8)) + prev(low4(0x00afd8d9)) + prev(high4(0x00afd8d9)) +
               prev(low4(0x00afd8da)) + prev(high4(0x00afd8da)) + prev(low4(0x00afd8db)) + prev(high4(0x00afd8db))
               ) == number_of_battle - 1 && 
               (low4(0x00afd8cc) + high4(0x00afd8cc) + low4(0x00afd8cd) + high4(0x00afd8cd) +
               low4(0x00afd8ce) + high4(0x00afd8ce) + low4(0x00afd8cf) + high4(0x00afd8cf) +
               low4(0x00afd8d0) + high4(0x00afd8d0) + low4(0x00afd8d1) + high4(0x00afd8d1) +
               low4(0x00afd8d2) + high4(0x00afd8d2) + low4(0x00afd8d3) + high4(0x00afd8d3) +
               low4(0x00afd8d4) + high4(0x00afd8d4) + low4(0x00afd8d5) + high4(0x00afd8d5) +
               low4(0x00afd8d6) + high4(0x00afd8d6) + low4(0x00afd8d7) + high4(0x00afd8d7) +
               low4(0x00afd8d8) + high4(0x00afd8d8) + low4(0x00afd8d9) + high4(0x00afd8d9) +
               low4(0x00afd8da) + high4(0x00afd8da) + low4(0x00afd8db) + high4(0x00afd8db)
               ) == number_of_battle
    return trigger
}

function AllBattleCheevos()
{
    for key in AllBattleInDungeonDict
    {
        value_list = AllBattleInDungeonDict[key]
        achievement(title=value_list[3], description="Complete all battles at " + key + value_list[4] + ".", points=value_list[0], 
        trigger=Location() == value_list[1] && ProcessDungeonAdd(value_list[2]))
    }
}

AllBattleCheevos()

////    "Hanging Gardens":               [10, 0x21, ],

////These are where the dungeon swithces to another map after the last battle so counting the map state will not work so I use the path bits
OtherAllBattleInDungeonDict = {
    "Palace of Dead Floors 1-25":  [01, 0x01, 0x1A, 7, "Like the Dead"],
    "Palace of Dead Floors 26-50": [05, 0x01, 0x15, 51, "Enticed With the Dead"],
    "Palace of Dead Floors 51-75": [10, 0x01, 0x1A, 50, "Obsessed With the Dead"],
}

function OtherAllBattleCheevos()
{
    for key in OtherAllBattleInDungeonDict
    {
        value_list = OtherAllBattleInDungeonDict[key]
        achievement(title=value_list[4], description="Complete all battles at " + key + ".", points=value_list[0], 
        trigger=Location() == value_list[1] && SecondaryLocation() == value_list[2] && dword(0xAFD8BC) == value_list[3] && 
                never(SecondaryLocation() != value_list[2]) && once(dword(0xAFD8BC) == 0x3ffffff))
    }
}

OtherAllBattleCheevos()

achievement(title="Sick of the Dead",
            description="Complete all battles at Palace of Dead Floors 101-115(Finish with Chamber of the Seal battle with Rodrick).",
            points=10,
            trigger=Location() == 0x01 && SecondaryLocation() == 0x03 && dword(0x00afd8cc) == 0x22221222 && 
                    dword(0x00afd8d0) == 0x12222222 && DeltaTitle() != 0x37 && Title() == 0x37)


/// Hanging Garden Dict key = Name of cheevo, value = [points, 0x00afd6ac value, 0x00afd6b0 value, 0x00afd6b4 value, description]
HangingGardenCheevoDict = {
    "Tour the King's Garden" :        [10, 0x22222000, 0x20022222, 0x00012220, "Fight all battles in the Hanging Gardens."],
    "Quick Walk through the Gardens": [05, 0x00112000, 0x20020012, 0x00011210, "Take the shortest route to the Twixt Of Heaven and Earth in the hanging gardens."],
}

function HangingGardenCheeovs()
{
    for key in HangingGardenCheevoDict
    {
        value_list = HangingGardenCheevoDict[key]
        achievement(title=key, description=value_list[4], points=value_list[0], 
        trigger=Location() == 0x21 && SecondaryLocation() == 0x13 && prev(dword(0x00afd6ac)) == value_list[1] &&
                prev(dword(0x00afd6b0)) == value_list[2] && prev(dword(0x00afd6b4)) == value_list[3] &&
                dword(0x00afd6ac) == 0 && dword(0x00afd6b0) == 0 && dword(0x00afd6b4) == 0x01000000
        )
    }
}

HangingGardenCheeovs()


achievement(title="Power Of Gods",
            description="Obtain at least one of each of the God Weapons:  Notos, Boreas, Zephyros, Euros",
            points=10,
            trigger=Location() != 0 && SecondaryLocation() != 0 && Title() != 0 && byte(0x00d52bf8) >= 1 && byte(0x00d52c14) >= 1 &&
                    byte(0x00d52c2e) >= 1 && byte(0x00d52c4b) >= 1 && InBattle() &&
                    (prev(byte(0x00d52bf8)) == 0 || prev(byte(0x00d52c14)) == 0 || prev(byte(0x00d52c2e)) == 0
                    || prev(byte(0x00d52c4b)) == 0)
            )

///Item set Dict key name of cheevo, value [points, left hand value, right hand value, helm value, armor value, description extension] 

ItemSetDict = {
    "Dragonslayer":       [05, 0xffff, 0x019e, 0x01b6, 0x01cb, "Dragon Equipment(Wyrmscale Helm, Wyrmscale Armor, and Ancient Dragon Scale shield)"],
    "Battle With Ogre's": [10, 0x004f, 0x0000, 0x01b8, 0x01e6, "Ogre Equipment(Ogre Sword, Ogre Helm, and Ogre Armor)"],
    "Ji'ygla's Range":    [10, 0x0151, 0x0000, 0x01dc, 0x01fa, "Ji'ygla's Equipment(Ji'ygla's Bow, Ji'ygla's Darkcoat, and Ji'ygla's Bracers)"],
    "Evil Deeds":         [10, 0x00c0, 0x0000, 0x01b9, 0x01e4, "Dark Equipment(Dagda's Hammer, Skull Mask, and Thanatos Armor)"],
}

function EquipTrigger(value_list)
{
    trigger = always_false()
    for i in range(0, 1)
    {
        if i == 0
        {
            if value_list[1] == 0xFFFF
            {
                trigger = trigger || LeftHand() == value_list[2] && FirstArmor() == value_list[3] && SecondArmor() == value_list[4]
            }
            else
            {
                trigger = trigger || RightHand() == value_list[1] && LeftHand() == value_list[2] && FirstArmor() == value_list[3] && SecondArmor() == value_list[4]
            }
        }
        else if i == 1
        {
            if value_list[1] == 0xFFFF
            {
                trigger = trigger || LeftHand() == value_list[2] && FirstArmor() == value_list[4] && SecondArmor() == value_list[3]
            }
            else
            {
                trigger = trigger || RightHand() == value_list[1] && LeftHand() == value_list[2] && FirstArmor() == value_list[4] && SecondArmor() == value_list[3]
            }
        }
    }
    
    return trigger
}

function DenamEquipCheevos()
{
    for key in ItemSetDict
    {
        value_list = ItemSetDict[key]
        achievement(title=key, description=value_list[5], points=value_list[0], 
        trigger=Location() != 0 && SecondaryLocation() != 0 && Title() != 0 && EquipTrigger(value_list)
        )
    }
}

DenamEquipCheevos()


//Class Cheevos
//Only Catiuas for now...

function ProcessClass(class_val)
{
    trigger = always_false()
    mem_base = 0x00ad8979
    char_offset = 0x48C
    for i in range(0, 48)
    {
        mem_char = mem_base + (char_offset * i)
        trigger = trigger || (prev(byte(mem_char)) != class_val && byte(mem_char) == class_val)
    }
    return trigger
}

///Random Cheevos

achievement(title="Fear of the Dark",
            description="Obtain a Heretic's Mark and Change Catuia into a special class.",
            points=10,
            trigger=Location() != 0 && SecondaryLocation() != 0 && Title() != 0 && ProcessClass(0x36)
            )

function ProcessMusic()
{
    trigger = (prev(bitcount(0x00b111c4)) + prev(bitcount(0x00b111c5)) + prev(bitcount(0x00b111c6)) + 
               prev(bitcount(0x00b111c7)) + prev(bitcount(0x00b111c8)) + prev(bitcount(0x00b111c9)) + 
               prev(bitcount(0x00b111ca)) + prev(bitcount(0x00b111cb)) + prev(bitcount(0x00b111cc))
               ) == 64 && 
              (bitcount(0x00b111c4) + bitcount(0x00b111c5) + bitcount(0x00b111c6) +
               bitcount(0x00b111c7) + bitcount(0x00b111c8) + bitcount(0x00b111c9) +
               bitcount(0x00b111ca) + bitcount(0x00b111cb) + bitcount(0x00b111cc)
               ) == 65
    return trigger
}

achievement(title="Faraway Heights",
            description="Obtain all Music selection in the Warren Report(Need to open up Warren report music menu).",
            points=10,
            trigger=Location() != 0 && SecondaryLocation() != 0 && Title() != 0 && ProcessMusic()
            )

function ProcessRecipes()
{
    trigger = (prev(byte(0x00ae85ca)) + prev(byte(0x00ae85cb)) + prev(byte(0x00ae85cc)) +  prev(byte(0x00ae85cd)) +
               prev(byte(0x00ae85ce)) + prev(byte(0x00ae85cf)) + prev(byte(0x00ae85d0)) +  prev(byte(0x00ae85d1)) +
               prev(byte(0x00ae85d2)) + prev(byte(0x00ae85d3)) + prev(byte(0x00ae85d4)) +  prev(byte(0x00ae85d5)) +
               prev(byte(0x00ae85d6)) + prev(byte(0x00ae85d7)) + prev(byte(0x00ae85d8)) +  prev(byte(0x00ae85d9)) +
               prev(byte(0x00ae85da)) + prev(byte(0x00ae85db)) + prev(byte(0x00ae85dc)) +  prev(byte(0x00ae85dd)) +
               prev(byte(0x00ae85de)) + prev(byte(0x00ae85df)) + prev(byte(0x00ae85e0)) +  prev(byte(0x00ae85e1)) +
               prev(byte(0x00ae85e2)) + prev(byte(0x00ae85e3)) + prev(byte(0x00ae85e4)) +  prev(byte(0x00ae85e5)) +
               prev(byte(0x00ae85e6)) + prev(byte(0x00ae85e7)) + prev(byte(0x00ae85e8)) +  prev(byte(0x00ae85e9)) +
               prev(byte(0x00ae85ea)) + prev(byte(0x00ae85eb)) + prev(byte(0x00ae85ec)) +  prev(byte(0x00ae85ed)) +
               prev(byte(0x00ae85ee)) + prev(byte(0x00ae85ef)) + prev(byte(0x00ae85f0)) +  prev(byte(0x00ae85f1)) +
               prev(byte(0x00ae85f2)) + prev(byte(0x00ae85f3)) + prev(byte(0x00ae85f4)) +  prev(byte(0x00ae85f5)) +
               prev(byte(0x00ae85f6)) + prev(byte(0x00ae85f7)) + prev(byte(0x00ae85f8)) +  prev(byte(0x00ae85f9)) +
               prev(byte(0x00ae85fa)) + prev(byte(0x00ae85fb)) + prev(byte(0x00ae85fc)) +  prev(byte(0x00ae85fd))
              ) == 51 && 
              (byte(0x00ae85ca) + byte(0x00ae85cb) + byte(0x00ae85cc) +  byte(0x00ae85cd) +
               byte(0x00ae85ce) + byte(0x00ae85cf) + byte(0x00ae85d0) +  byte(0x00ae85d1) +
               byte(0x00ae85d2) + byte(0x00ae85d3) + byte(0x00ae85d4) +  byte(0x00ae85d5) +
               byte(0x00ae85d6) + byte(0x00ae85d7) + byte(0x00ae85d8) +  byte(0x00ae85d9) +
               byte(0x00ae85da) + byte(0x00ae85db) + byte(0x00ae85dc) +  byte(0x00ae85dd) +
               byte(0x00ae85de) + byte(0x00ae85df) + byte(0x00ae85e0) +  byte(0x00ae85e1) +
               byte(0x00ae85e2) + byte(0x00ae85e3) + byte(0x00ae85e4) +  byte(0x00ae85e5) +
               byte(0x00ae85e6) + byte(0x00ae85e7) + byte(0x00ae85e8) +  byte(0x00ae85e9) +
               byte(0x00ae85ea) + byte(0x00ae85eb) + byte(0x00ae85ec) +  byte(0x00ae85ed) +
               byte(0x00ae85ee) + byte(0x00ae85ef) + byte(0x00ae85f0) +  byte(0x00ae85f1) +
               byte(0x00ae85f2) + byte(0x00ae85f3) + byte(0x00ae85f4) +  byte(0x00ae85f5) +
               byte(0x00ae85f6) + byte(0x00ae85f7) + byte(0x00ae85f8) +  byte(0x00ae85f9) +
               byte(0x00ae85fa) + byte(0x00ae85fb) + byte(0x00ae85fc) +  byte(0x00ae85fd)
               ) == 52
    return trigger
}

achievement(title="Secret Of the Master",
            description="Obtain all crafting recipes.",
            points=25,
            trigger=Location() != 0 && SecondaryLocation() != 0 && Title() != 0 && ProcessRecipes()
            )
            
achievement(title="Floating On Air",
            description="Complete the story battle at Top Of San Brosa(No Heavenly General).",
            points=10,
            trigger=Location() == 0x2C && prev(high4(0x00afd8da)) == 1 && high4(0x00afd8da) == 2
            && unless(once(byte(0x00ae8544) > 0)) && (never(SecondaryLocation() != 0x1A) || always_false())
            )
            
achievement(title="Dont Be Deceived",
            description="Complete the story battle at Level 12 of San Brosa.",
            points=5,
            trigger=Location() == 0x2C && SecondaryLocation() != 0x0B && prev(low4(0x00afd8d2)) == 1 && low4(0x00afd8d2) == 2
            )

function ProcessOmishBattle()
{
    trigger = always_true()
    mem_base = 0x00d410a0
    char_offset = 0x520
    for i in range(0, 19)
    {
        mem_char = mem_base + (char_offset * i)
        trigger = trigger && word(mem_char) == 0
    }
    return trigger
}

function ProcessOmishDelta()
{
    mem_base = 0x00d410a0
    char_offset = 0x520
    trigger = always_false()
    for i in range(0, 19)
    {
        mem_char = mem_base + (char_offset * i)
        trigger = trigger || prev(word(mem_char)) != 0
    }
    return trigger
}

achievement(title="The Songstress Of Omish",
            description="Compelte initial battle of CODA episode 1 by defeating all enemies.",
            points=10,
            trigger=Location() == 0x26 && byte(0x00d40130) == 1 && byte(0x00d40650) == 0x06 && byte(0x00d40b70) == 0x08 &&
                    ProcessOmishBattle() && ProcessOmishDelta()
            )

function InCityLocation()
{
    trigger = always_false()
    trigger = trigger || Location() == 0x05 || Location() == 0x09 || Location() == 0x0B || Location() == 0x0D ||
              Location() == 0x0F || Location() == 0x14 || Location() == 0x17 || Location() == 0x19 || 
              Location() == 0x1A || Location() == 0x1C || Location() == 0x1E || Location() == 0x1F ||
              Location() == 0x23 || Location() == 0x26
    return trigger
}

//Item Cheevos

achievement(title="Heavenly Communion",
            description="Craft a Heaven's Fork.",
            points=5,
            trigger=prev(byte(0x00ae8544)) < byte(0x00ae8544) && Title() != 0 && SecondaryLocation() != 0 && NotInBattle() && InCityLocation()
            )

achievement(title="Tale of Mann Maceux",
            description="Steal a Reaver ring from the Grim Reaper.",
            points=10,
            trigger=Location() == 0x25 && SecondaryLocation() == 0x08 && Title() != 0 &&
                    prev(byte(0x00d52dd9)) < byte(0x00d52dd9) && InBattle()
            )
            
achievement(title="Forgive Thy Sins",
            description="Steal an Abuna's Mark.",
            points=10,
            trigger=Location() == 0x25 && SecondaryLocation() == 0x04 && Title() != 0 &&
                    prev(byte(0x00d52fe4)) < byte(0x00d52fe4) && InBattle()
                    
            )
            
achievement(title="Command and Conquer",
            description="Steal a Hagiaknight Mark.",
            points=10,
            trigger=Location() == 0x2e && Title() != 0 && prev(byte(0x00d52fee)) < byte(0x00d52fee) && 
                    InBattle()
            )
            
function ProcessInBattleClassChange(class_val)
{
    trigger = always_false()
    mem_base = 0x00d40179
    alliegance_offset = 0x09
    char_offset = 0x520
    for i in range(0, 11)
    {
        mem_char = mem_base + (char_offset * i)
        trigger = trigger || (byte(mem_char) == class_val && prev(byte(mem_char)) != class_val && byte(mem_char + alliegance_offset) == 0x13)
    }
    return trigger
}

achievement(title="Heavenly Blessing",
            description="Convert a character to a Divine Knight.",
            points=10,
            trigger=Location() == 0x2c && SecondaryLocation() == 0x04 && InBattle() && ProcessInBattleClassChange(0x12)
            )

achievement(title="Hellish Blessing",
            description="Convert a character to a Lich.",
            points=10,
            trigger=Location() == 0x01 && SecondaryLocation() == 0x08 && InBattle() && ProcessInBattleClassChange(0x11)
            )      

function ProcessNamedWeapon()
{
    trigger = (prev(byte(0x00d52dff)) + prev(byte(0x00d52e00)) + prev(byte(0x00d52e01)) +  prev(byte(0x00d52e02)) +
               prev(byte(0x00d52e03)) + prev(byte(0x00d52e04)) + prev(byte(0x00d52e05)) +  prev(byte(0x00d52e06)) +
               prev(byte(0x00d52e07)) + prev(byte(0x00d52e08)) + prev(byte(0x00d52e09)) +  prev(byte(0x00d52e0a)) +
               prev(byte(0x00d52e0b)) + prev(byte(0x00d52e0c)) + prev(byte(0x00d52e0d)) +  prev(byte(0x00d52e0e)) +
               prev(byte(0x00d52e0f))
              ) == 0 && 
              (byte(0x00d52dff) + byte(0x00d52e00) + byte(0x00d52e01) +  byte(0x00d52e02) +
               byte(0x00d52e03) + byte(0x00d52e04) + byte(0x00d52e05) +  byte(0x00d52e06) +
               byte(0x00d52e07) + byte(0x00d52e08) + byte(0x00d52e09) +  byte(0x00d52e0a) +
               byte(0x00d52e0b) + byte(0x00d52e0c) + byte(0x00d52e0d) +  byte(0x00d52e0e) +
               byte(0x00d52e0f)
               ) == 1
    return trigger
}

achievement(title="Take This Curse",
            description="Obtain a named Cursed weapon.",
            points=10,
            trigger=Location() == 0x01 && SecondaryLocation() != 0x00 && InBattle() && ProcessNamedWeapon()
            )  

/////REFERENCE MATERIAL OR STUFF MOVED AROUND

/////Cut out old single entires for multi entries
///    "Freedom Fighter":                [1, 0x17, 0x03, "Spoke with Cistina and at the Arkhaiopolis of Rhime and told her you fought for Walister freedom."],
///    "Peace Seeker":                   [1, 0x17, 0x04, "Spoke with Cistina and at the Arkhaiopolis of Rhime and told her you fought to secure peace throughout Valeria."],
///    "He Who Fights Alone":            [1, 0x17, 0x05, "Spoke with Cistina and at the Arkhaiopolis of Rhime and told her you would never join forces with another faction."],
///    "The Impassive":                  [1, 0x17, 0x06, "Allowed the Galgastani to kill Cistina at the Arkhaiopolis of Rhime because she was of another faction."],
///    "Butcher Of Golyat":              [1, 0x0D, 0x07, "Carried out Duke Ronwey's chilling plan to slay the five thousand innocents in Balmamusa."],
///    "Fallen Hero":                    [1, 0x0D, 0x08, "Refused to participate in Duke Ronwey's heartless plan to massacre the innocents of Balmamusa, for which you were then blamed and made a wanted man."],
///    "Man of Proven Worth":            [1, 0x13, 0x0B, "Joined Forces with Arycelle - one of the few who knew the truth of Balmamusa - and fought free of the trap laid by Vyce."],
///    "The Unfaithful":                 [1, 0x13, 0x0A, "Turned against Vyce, your lifelong friend on Tynemouth Hill."],
///    "Helpful Spirit":                 [1, 0x0, 0x0C, "Agreed to help rescue Cistina from the pirates who took her captive."],//
///    "The Selfish":                    [1, 0x0, 0x0D, "Refused to help rescue Cistina from pirates for fear your pursuers might catch you."],
///    "Man Among Friends":              [1, 0x20, 0x0E, "Befriended members of the Liberation Front at Boed Fortress."],
///    "The Unhearing":                  [1, 0x20, 0x0F, "Refused to hear the Pleas of the Liberation Front at Boed Fortress."],
///    "Man Of Principles":              [1, 0x0, 0x10, "Refused Sir Leonar's entreaty to return to the Resistance."],
///    "The Hero Returned":              [1, 0x0, 0x11, "Heeded Sir Leonar's entreaty to return to the Resistance."],
///    "He Who Shuns Duty":              [1, 0x0, 0x14, "Refused to support Sir Leonar's plot to assassinate Duke Ronwey and seize control of the Resistance."],
///    "Man of Resolve":                 [1, 0x0, 0x15, "Joined Sir Leonar in his plot to assassinate Duke Ronwey and seize control of the Resistance"],
///    "Man of the Sword":               [1, 0x0, 0x23, "Told the Galgastani you met at Brigantys Castle that the people of Galgastan were your enemy."],
///    "Man of No Illusions":            [1, 0x0, 0x24, "Told the Galgastani you met at Brigantys Castle that the people of Galgastan were not your enemy."],
///    "Princess Slayer":                [1, 0x0, 0x2B, "Brought about Catiua's death in the battle with the Dark Knights at Barnicia."],
///    "Tragic Hero":                    [1, 0x0, 0x2C, "Captured Barnicia Castle only to watch as Catiua took her own life."],
///    "Princess Savior":                [1, 0x0, 0x2D, "Stormed Barnicia Castle and rescued Catiua from the Dark Knights."],
///    "Bringer of Peace":               [1, 0x0, 0x2E, "Defeated Regent Brantyn at the Royal City of Heim, enabling Catiua to declare an end to the blood war."],
///    "Bringer of Order":               [1, 0x0, 0x30, "Told your war council that the members of the Resistance responsible for the sacking of Heim would be punished."],
///    "Bringer of Strife":              [1, 0x0, 0x2F, "Told your war council that the Resistance's sacking of Heim was an unavoidable evil."],
///    "Grave Robber":                   [1, 0x00, 0x32, "Plundered the treasure from the Pirate's Graveyard."],
///    "He Who Treads Holy Ground":      [5, 0x00, 0x33, "Left the treasure in the Pirate's Graveyard undisturbed"],

//////Title Cheevos that needs extra logic - Endings and Misc since it may not be guartneed as the showing Title since multiple ones could potentially unlock at once///////
//////Abandonned due to potential issue with coliding with other cheevos and being too much of an ask

///    /// Need to figure out how this will work with the location
///   "Concord King[m]": [25, 0x21, [0x56, 0x5A], "Complete main campaign without using Chariot Tarot or retreating."],  /// Need to pop on killing last boss with and check for 0 deatsh
///   "The Unbloodied Depth Dweller[m]": [25, 0x01, [0x35, 0x5B], "Traverse throug Palace of the Dead without any units dying(No Death Counter to 0)"], //need to pop on death of nybeth
///   "The Unscathed Depth Dweller[m]": [100, 0x01, [0x35, 0x5B], "Traverse throug Palace of the Dead without any units falling(No HP to 0)"], //need to pop on death of nybeth

